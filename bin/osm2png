#!/bin/sh
# Copyright (c) 2012-2015 Wolfram Schneider, http://bbbike.org
#
# osm2png - convert a osm/pbf file to PNG
#

set -e
PATH=/usr/local/bin:/bin:/bin:/usr/bin; export PATH

: ${BBBIKE_OPT_DIR="/var/lib/bbbike/opt"}
: ${BBBIKE_TMPDIR="/bbbike/tmp"}
: ${BBBIKE_EXTRACT_LANG="en"}

: ${BBBIKE_MAPERITIVE_VERSION="Maperitive-2.3.34"}
: ${BBBIKE_MAPERITIVE_ZOOM="15"}
: ${BBBIKE_MAPERITIVE_SCALE="1"}
: ${BBBIKE_MAPERITIVE_MAPSTYLE="osm"}
: ${BBBIKE_MAPERITIVE_DISPLAY=":100"}

#: ${BBBIKE_MAPERITIVE_WIDTH="1200"}
#: ${BBBIKE_MAPERITIVE_HEIGHT="900"}
: ${MD5=`which md5 md5sum false 2>/dev/null | head -1`}
: ${SHA="shasum -a 256"}
: ${osm_checksum=$(dirname $0)/osm-checksum}


usage () {
   echo "$@"
   echo "usage file [ osm | google | hike | wireframe | night ]" # [ title ]
   exit 1
}

error () {
    message="$@"

    echo "$message"
    echo "file: $file"
    cat $logfile
    exit 1
}

file=$1
map_style=$2

test -z "$file" && usage

# absolute file path
case $file in /*) ;; *) file=$(pwd)/$file ;; esac

text2html=$(dirname $0)/text2html.sh
case $text2html in /*) ;; *) text2html=$(pwd)/$text2html ;; esac

template=$(dirname $0)/../etc/extract/$(basename $0).$BBBIKE_EXTRACT_LANG.sh
case $template in /*) ;; *) template=$(pwd)/$template ;; esac

test -z "$map_style" && map_style=${2-"$BBBIKE_MAPERITIVE_MAPSTYLE"}

alias=""
case "$map_style" in
   osm | default | Default )    alias=default ;;
   google | googlemaps )        alias=googlemaps ;;
   hike | hiking | hike_bike )  alias=hiking ;;
   wireframe | Wireframe )      alias=wireframe ;;
   urbanight | night )          alias=urbanight ;;
    * ) error "unknown map_style: '$map_style'" ;;
esac

: ${debug=false}

size=$(du -ks -L "$file" | awk '{ print $1}')
pwd=$(pwd)

tmpdir=$(mktemp -d ${BBBIKE_TMPDIR}/osm2png.$map_style.XXXXXXXXXXX)/png-$map_style
mkdir -p $tmpdir
cd $tmpdir

# cleanup after signal, but show errors first
trap '( sleep 1; rm -rf $tmpdir ) &' 1 2 15

logfile=$tmpdir/logfile.txt

config_file=config.mscript
image_file=image.png
touch $logfile
zoom=$BBBIKE_MAPERITIVE_ZOOM
scale=$BBBIKE_MAPERITIVE_SCALE
program="mono --desktop  $BBBIKE_OPT_DIR/$BBBIKE_MAPERITIVE_VERSION/Maperitive.exe"

#####################################################################################
# create config file on the fly
#
cat > $config_file <<EOF
clear-map
load-source $file
use-ruleset alias=$alias
apply-ruleset
export-bitmap zoom=$zoom file=$image_file scale=$scale
EOF

date=$(date -u)
BBBIKE_EXTRACT_COORDS=$BBBIKE_EXTRACT_COORDS BBBIKE_EXTRACT_URL=$BBBIKE_EXTRACT_URL \
  date=$date maperitive_map_style=$map_style sh $template > $tmpdir/README.txt

$text2html < README.txt > README.html

#####################################################################################
# main
#
echo ">>> Run Maperitive, map style: $map_style" >> $logfile
DISPLAY=$BBBIKE_MAPERITIVE_DISPLAY time $program  -exitafter $(pwd)/$config_file >> $logfile 2>&1

( $MD5 $image_file; $SHA $image_file ) > .checksum.txt.tmp; mv -f .checksum.txt.tmp CHECKSUM.txt

cd ..

# zip file in same directory as the PBF file
basename=$(basename $file | perl -npe 's/\.(pbf|osm\.pbf|osm|osm\.gz|osm\.bz2)$//')
tarball_zip=$(dirname $file)/${basename}-png-${map_style}.zip
zip -q -r - -- $(basename $tmpdir) | \
  ( cd $pwd;
    cat > $tarball_zip.tmp && mv $tarball_zip.tmp $tarball_zip
    $osm_checksum $tarball_zip
  )
  
# cleanup except in debug mode  
$debug || rm -rf $tmpdir

# EOF